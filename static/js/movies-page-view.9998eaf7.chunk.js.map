{"version":3,"sources":["services/fetch-api.jsx","views/MoviesPageView.module.css","components/MoviePreview/MoviePreview.module.css","../node_modules/slugify/slugify.js","components/MoviesList/MoviesList.module.css","components/MoviePreview/MoviePreview.jsx","components/MoviesList/MoviesList.jsx","views/MoviesPageView.jsx"],"names":["IMG_URL","axios","defaults","baseURL","params","api_key","language","getCastAndReviews","movieId","a","url","append_to_response","data","alert","getSearchingMovies","formValue","query","results","getTrendingMovies","module","exports","factory","charMap","JSON","parse","locales","replace","string","options","Error","locale","replacement","undefined","slug","normalize","split","reduce","result","ch","remove","trim","RegExp","lower","toLowerCase","strict","extend","customMap","key","MoviePreview","poster_path","title","release_date","className","m","src","alt","slice","withRouter","movies","location","moviesList","map","id","item","to","pathname","slugify","state","from","MoviesPageView","status","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","handleClear","localStorage","removeItem","getItem","formValueFromStorage","parsedMovies","parsedFormValue","this","length","then","searchingMovies","setItem","stringify","container","headBlock","formBar","onSubmit","type","onClick","name","onChange","Component"],"mappings":"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","file":"static/js/movies-page-view.9998eaf7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4f24a465004dec8d1f65f162bb769c3a';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\n// запрос на карточку фильма\nexport const getCastAndReviews = async movieId => {\n  try {\n    const url = {\n      url: `movie/${movieId}`,\n      params: {\n        append_to_response: 'credits,reviews',\n      },\n    };\n    const { data } = await axios(url, movieId);\n    return data;\n  } catch (error) {\n    alert(error);\n    return null;\n  }\n};\n\n// запрос на поиск фильмов\nexport const getSearchingMovies = async formValue => {\n  try {\n    const url = {\n      url: 'search/movie',\n      params: {\n        query: formValue,\n        // page: 1,\n        // include_adult: false,\n      },\n    };\n    const { data } = await axios(url);\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return null;\n  }\n};\n\n// запрос на фильмы в тренде на главной странице\nexport const getTrendingMovies = async () => {\n  try {\n    const url = { url: 'trending/movie/week' };\n    const { data } = await axios(url);\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    alert(error);\n    return null;\n  }\n};\n\n('axios');\n// импорт axios\n// --- export на каждый элемент, который передаём\n// --- note // ! почему не default? - конспект\n\n// задаём КОНСТАНТЫ\n// --- рапределить по axios.defaults\n// --- они будут под капотом в каждом запросе\n// --- --- axios.defaults.baseURL = BASE_URL;\n// --- --- axios.defaults.params = { [ключ: значение] как в запросе параметры [ключ=значение] }\n\n// async перед ф-цией\n// - try { } catch (error) { alert(error); }\n// --- return и в try, и в catch\n// --- создаём объект настроек в try { }\n// --- const url = { url: 'trending/movie/week' } используется после [axios.defaults.baseURL]\n// --- --- const { data } = await axios(url);\n// --- если { url: `movie/${movieId}` } с интерполяцией, то параметр ф-ции кидаем в axios дальше\n// --- --- const { data } = await axios(url, movieId); [сразу с деструктуризацией ответа]\n// --- если в адресе запроса есть ещё параметры, прописываем их тоже в url = {}:\n// --- --- url = { url: 'trending/movie/week', params: { append_to_response: 'credits,reviews' } };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesPageView_container__11pun\",\"headBlock\":\"MoviesPageView_headBlock__1mWdC\",\"formBar\":\"MoviesPageView_formBar__19t6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviePreview-thumb\":\"MoviePreview_MoviePreview-thumb__1K5ai\",\"MoviePreview-titleBlock\":\"MoviePreview_MoviePreview-titleBlock__JUGv0\",\"MoviePreview-title\":\"MoviePreview_MoviePreview-title__2o5eU\"};","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"%\":\"percent\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ľ\":\"L\",\"ľ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ō\":\"O\",\"ō\":\"o\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ŕ\":\"R\",\"ŕ\":\"r\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"Ə\":\"E\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"ə\":\"e\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"ѝ\":\"u\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"Ғ\":\"GH\",\"ғ\":\"gh\",\"Қ\":\"KH\",\"қ\":\"kh\",\"Ң\":\"NG\",\"ң\":\"ng\",\"Ү\":\"UE\",\"ү\":\"ue\",\"Ұ\":\"U\",\"ұ\":\"u\",\"Һ\":\"H\",\"һ\":\"h\",\"Ә\":\"AE\",\"ә\":\"ae\",\"Ө\":\"OE\",\"ө\":\"oe\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"Ẁ\":\"W\",\"ẁ\":\"w\",\"Ẃ\":\"W\",\"ẃ\":\"w\",\"Ẅ\":\"W\",\"ẅ\":\"w\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₸\":\"kazakhstani tenge\",\"₹\":\"indian rupee\",\"₺\":\"turkish lira\",\"₽\":\"russian ruble\",\"₿\":\"bitcoin\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  var locales = JSON.parse('{\"de\":{\"Ä\":\"AE\",\"ä\":\"ae\",\"Ö\":\"OE\",\"ö\":\"oe\",\"Ü\":\"UE\",\"ü\":\"ue\",\"%\":\"prozent\",\"&\":\"und\",\"|\":\"oder\",\"∑\":\"summe\",\"∞\":\"unendlich\",\"♥\":\"liebe\"},\"vi\":{\"Đ\":\"D\",\"đ\":\"d\"},\"fr\":{\"%\":\"pourcent\",\"&\":\"et\",\"<\":\"plus petit\",\">\":\"plus grand\",\"|\":\"ou\",\"¢\":\"centime\",\"£\":\"livre\",\"¤\":\"devise\",\"₣\":\"franc\",\"∑\":\"somme\",\"∞\":\"infini\",\"♥\":\"amour\"}}')\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var locale = locales[options.locale] || {}\n\n    var replacement = options.replacement === undefined ? '-' : options.replacement\n\n    var slug = string.normalize().split('')\n      // replace characters based on charMap\n      .reduce(function (result, ch) {\n        return result + (locale[ch] || charMap[ch] || ch)\n          // remove not allowed characters\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]+/g, '')\n      }, '')\n      // trim leading/trailing spaces\n      .trim()\n      // convert spaces to replacement character\n      // also remove duplicates of the replacement character\n      .replace(new RegExp('[\\\\s' + replacement + ']+', 'g'), replacement)\n\n    if (options.lower) {\n      slug = slug.toLowerCase()\n    }\n\n    if (options.strict) {\n      // remove anything besides letters, numbers, and the replacement char\n      slug = slug\n        .replace(new RegExp('[^a-zA-Z0-9' + replacement + ']', 'g'), '')\n        // remove duplicates of the replacement character\n        .replace(new RegExp('[\\\\s' + replacement + ']+', 'g'), replacement)\n    }\n\n    return slug\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesList\":\"MoviesList_moviesList__3rZPk\"};","import React from 'react';\n\nimport m from './MoviePreview.module.css';\n\nconst MoviePreview = ({ poster_path, title, release_date }) => {\n  return (\n    <div className={m[`MoviePreview-thumb`]}>\n      <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n\n      <div className={m[`MoviePreview-titleBlock`]}>\n        <h5 className={m[`MoviePreview-title`]}>{`${title}`}</h5>\n        {release_date && (\n          <h5 className={m[`MoviePreview-title`]}>\n            {`(${release_date.slice(0, 4)})`}\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePreview;\n\n// 56. приняли пропсы и расписали как надо\n// --- добавили классы -> MovieDetailsPageView\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport MoviePreview from '../MoviePreview/MoviePreview';\nimport slugify from 'slugify';\nimport m from './MoviesList.module.css';\n\nconst makeSlug = string => slugify(string, { lower: true, strict: false });\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={m.moviesList}>\n      {movies.map(({ id, poster_path, title, release_date }) => (\n        <li key={id} className={m.item}>\n          <Link\n            to={{\n              pathname: `/movies/${makeSlug(`${title} ${id}`)}`,\n              // pathname: `/movies/${id}`,\n              state: { from: location },\n            }}\n          >\n            <MoviePreview\n              poster_path={poster_path}\n              title={title}\n              release_date={release_date}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default withRouter(MoviesList);\n// Саша Репета для чего-то использовал User snippet reexport (посмотреть)\n\n// 52. переиспользуемый компонент MoviesList -> 45. MoviesPageView\n\n// 53. 3 пропа передаются только тому компоненту, который рендерится с помощью Route\n// --- в противном случае нужен {withRouter} (ф-ция или компонент высшего порядка? компонент-обёртка)\n// --- при экспорте вызывается как ф-ция с ссылкой на основную ф-цию withRouter(MoviesList)\n// --- сначала withRouter обворачивает нашу ф-цию, а потом под капотом в неё возвращает пропы, т.е. в HomePageView и MoviesPageView рендерится не MoviesList, а компонент зарендеренный withRouter с таким же именем MoviesList\n// 54. т.к. передаются разные url, нужно подготовить исходя из источника\n// --- вытягиваем его из match и вставляем динамически\n// --- или в нашем случае, т.к. постоянно переходим по одному адресу, жестко его прописать в Link to={/movies/}\n// --- withrouter в таком случае не нужен\n('---');\n// 55. делаем превьюшки фильмов -> MoviePreview\n// --- импортируем и рендерим в ссылку компонент превьюшки фильма\n// --- распыляем в него проп movie со всеми пропсами\n// --- но лучше кидать конкретные пропсы, а не все вподряд (так их видно конкретно и меньше)\n('---');\n// 58. в Link to= можно передать не только строку, но и объект настроек (props.location) {pathname: `/books/${id}`}\n// --- можно так же передавать state с информацией. этой информацией будет весь объект текущей локации location\n// --- state: {from: location} - проп, принятый {параметрах}, а чтоб он принялся нужен withRouter\n// --- теперь видим в location.state.from.pathname запись последнего url -> MovieDetailsPageView\n\n('Slug'); // -> App\n\n// 71.npm i slugify\n// --- import slugify from 'slugify';\n// --- рендерим для примера все названия фильмов {slugify(title)}\n// --- пробуем с объектом настроек\n// --- передаём вконце id\n// --- убираем импорт и рендер slugify\n// 72. импортируем и рендерим наш slugify в pathname: `/movies/${slugify(`${title} ${id}`, { lower: true })}`,\n// --- причёсываем, вынося в отдельныю ф-цию\n// 73. если мы теперь перейдём в карточку фильма, то в url у нас будет /movies/godzilla-vs.-kong-399566, поэтому перейти не сможем, т.к. в routes у нас записано /movies/:movieId\n// --- меняем на /movies/:slug\n\n// -> MoviesDetailsPageView\n","import React, { Component } from 'react';\nimport { getSearchingMovies } from '../services/fetch-api';\nimport MoviesList from '../components/MoviesList';\n\nimport m from './MoviesPageView.module.css';\n\nclass MoviesPageView extends Component {\n  state = {\n    formValue: '',\n    movies: [],\n    status: 'idle',\n  };\n\n  componentDidMount() {\n    const moviesList = localStorage.getItem('movies');\n    const formValueFromStorage = localStorage.getItem('formValue');\n    const parsedMovies = JSON.parse(moviesList);\n    const parsedFormValue = JSON.parse(formValueFromStorage);\n\n    if (parsedMovies) {\n      this.setState({ movies: parsedMovies });\n      this.setState({ formValue: parsedFormValue });\n    }\n  }\n\n  async componentDidUpdate() {\n    const { formValue, status } = this.state;\n\n    if (status === 'pending' && formValue.length !== 0) {\n      // const searchQuery = await fetchMovie(formValue);\n      getSearchingMovies(formValue).then(searchingMovies => {\n        this.setState({\n          movies: searchingMovies,\n          status: 'resolved',\n        }),\n          localStorage.setItem('movies', JSON.stringify(searchingMovies));\n      });\n\n      localStorage.setItem('formValue', JSON.stringify(formValue));\n    }\n  }\n\n  handleChange = e => {\n    const { value } = e.currentTarget;\n\n    this.setState({ formValue: value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({\n      status: 'pending',\n    });\n  };\n\n  handleClear = () => {\n    this.setState({ formValue: '', movies: [], status: 'idle' });\n    localStorage.removeItem('movies');\n    localStorage.removeItem('formValue');\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className={m.container}>\n        <div className={m.headBlock}>\n          <form className={m.formBar} onSubmit={this.handleSubmit}>\n            <button type=\"button\" onClick={this.handleClear}>\n              Clear\n            </button>\n\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.formValue}\n              onChange={this.handleChange}\n            />\n\n            <button type=\"submit\">Search</button>\n          </form>\n        </div>\n\n        <MoviesList movies={movies} />\n      </div>\n    );\n  }\n}\nexport default MoviesPageView;\n\n// status:\n// --- 'idle', - простаивание\n// --- 'pending', - ожидание\n// --- 'resolved', - разрешение\n// --- 'rejected' - отклонение\n\n('---');\n// 16. Для запроса нам нужен class и state для записи\n// 17. Для запросов импортируем Axios и делаем запрос, когда наш компонент маунтится (нажимаем на ссылку => меняется url в адресной строке => BrowserRouter реагирует и вызывает (маунтит) наш компонент MoviesPageView)\n// 18. В консоли видим результат запроса, записываем массив фильмов в state (каждый раз заново, не от предыдущего)\n// 19. Рендерим разметку для списка книг, достаём фильмы из стейта и мапим, вставляем id в <li> и рендерим title каждой книги\n('---');\n// 20. Теперь делаем встроенную навигацию - при нажарии на название (превью) фильма из общего списка, нас должно перекидывать на детальное описание фильма\n// 21. Нам нужно из названия сделать ссылку, но чтоб страница не перезагружалась - это { Link }, импортируем обворачиваем в него наши title\n// 22. В проп to=\"\" нужно вставить не статический, а динамический адрес, а чтоб у каждой книги был свой - определителем будет id\n('---');\n// 23. Использование во вложенной навигации постоянно в to= /movies - это антипаттерн магических строк, это плохо, потому что /movies уже используется под основную навигацию. Когда Route path=\"\" совпадает с текущим url (pathname)? то зарендеренный компонент (например наш MoviesPageView) получает от react-router три дополнительных пропса:\n// - history (объект для работы с историей)\n// - location (обьект, описывающий текущий путь в адресной строке, url)\n// --- hash: \"\" (описывает якорь)\n// --- key: \"234h4j\" (ID записи в истории)\n// --- pathname: \"/movies\" (тот, что мы пишем в рауте)\n// --- search: \"\" (query-стрим)\n// --- state: \"\"\n// - match (инфа от совпадении текущего маршрута с url)\n// --- isExact: true (если совпал)\n// --- params: {}\n// --- path: \"/movies\" (шаблон, на который зарендерился текущий раут, используем для создания вложенных маршрутов)\n// --- url: \"/movies\" (то, что записано в адресной строке, используем для создания вложенной навигации)\n\n// 24. консолим этот url (this.props.match.url) и смотрим, что он сходится с нашим to={/movies}  (или смотрим в React Tools - Components)\n// 25. поэтому мы можем вместо статической записи вставить наш динамический проп\n('---');\n// Теперь нам нужно сделать компонент, который будет рендериться на отдельный фильм - это отдельная страница MovieDetailsPageView\n('---');\n// 40. переносим весь код из MoviesPageView в HomePageView, т.к. это должна быть страница с формой поиска\n// 41. делаем форму для поиска фильмов по ключевому слову\n// --- форма с onSubmit и без label\n// --- input с type, name, value, onChange\n// ------ value должно отображать то, что записывается в state\n// ------ onChange должен вызывать метод handleChange, который\n// --- кнопка submit\n// 42. handleChange записывает в state значение {value} (с нижним регистром) в событии e.currentTarget\n// 43. handleSubmit должен иметь неперегружайку e.preventDefault();\n// --- переписывает статус на одидающий\n// 44. Т.к. у нас state перезаписывается каждый раз при изменениях в форме, то для запроса нужно использовать componentDidUpdate, потому что только в этом случае будет запрос последних изменений в форме\n// --- при componentDidUpdate нужно обязательно задать условие if () иначе цикличность\n// --- при смене статуса делаем запрос\n// --- меняем статус на подтверждённый\n// --- пишем ответ в state.movies\n// --- очищаем форму\n// -> App\n('---');\n// -> 52. MoviesList\n// 45. рендерим с пропами <MoviesList movies={this.state.movies} url={this.props.match.url} />\n// 46. переделываем на внутреннюю маршрутизацию Route\n// --- в path мы используем динамику, но не match.url, а match.path\n// 47. переиспользуем компонент MoviesList закидывая в него такие же пропсы как и в MoviesPageView, но с другим пропсом url={}\n// --- для законсоливания данных, можно использовать по данным в state или props метод .find()\n('КНОПКА НАЗАД');\n// 48. используем localStorage\n// --- условия те же, что и при запросе\n// --- при апдейте записываем в сторэдж this.state.movies и this.state.formValue\n// --- при маунте достаём из сторэджа и парсим\n// --- при условии наличия парса сетим по местам\n\n('КНОПКА CLEAR');\n// 50. удаляем данные в сторэдже и стейтим дэфолтные значения -> HomePageView\n"],"sourceRoot":""}